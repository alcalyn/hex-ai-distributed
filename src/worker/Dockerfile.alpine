# Alpine version of docker image, size is less than 1 Go, instead of 2 Go with non-alpine.
# Mohex works, but I get segfault with katahex, with genmove command. Reproduce:
# add "privileged: true" to worker container in docker compose
# docker compose run worker sh
# echo '/tmp/core.%t.%e.%p' | sudo tee /proc/sys/kernel/core_pattern
# katahex gtp -config /app/katahex/config.cfg -model /app/katahex/katahex_model_20220618.bin.gz
# genmove b
# genmove w
# segfault is here, get stask trace with: apk add gdb && gdb /bin/katahex /tmp/core...
# bt

FROM node:21-alpine

RUN apk update && apk add --no-cache \
    alpine-sdk \
    boost-dev \
    cmake \
    git

# Mohex

RUN apk add --no-cache \
    db-dev

# Download Mohex source code
# Go back to an older version, I get a strange AI behaviour on latest version.
# See https://github.com/cgao3/benzene-vanilla-cmake/issues/14
RUN cd /tmp \
    && git clone https://github.com/cgao3/benzene-vanilla-cmake \
    && cd benzene-vanilla-cmake/ \
    && git checkout f888938bc7ab051a04034a9e19a31399a31d2429 \
    && mkdir build \
    && cd build/ \
    && cmake ../ \
    && make -j4 \
    && mv ./src/mohex/mohex /bin/mohex

# Katahex

RUN apk add --no-cache \
    eigen-dev \
    libzip-dev

# Katahex selinger
# From https://github.com/selinger/katahex
RUN cd /tmp \
    && git clone https://github.com/selinger/katahex \
    && cd katahex/ \
    && mkdir build \
    && cd build \
    && cmake -DUSE_BACKEND=EIGEN -DMAX_BOARD_LEN=19 ../cpp \
    && make -j4 \
    && mv ./katahex /bin/katahex
